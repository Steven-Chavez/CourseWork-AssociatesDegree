package ChavezP5;

import java.io.File;
import javax.swing.JFileChooser;
/**
 * @author Steven Chavez <schavez256@yahoo.com>
 * File: ProductFrame.java
 * Program 5: NetBeans GUI
 * CIS2235
 */
public class ProductFrame extends javax.swing.JFrame {

    private DataControl data;
    private String rbColorTxt, rbMaterialTxt, strMidi;
    private String[] accessories;
    /**
     * Creates new form ProductFrame
     */
    public ProductFrame() {
        initComponents();
        data = new DataControl();
        rbColorTxt = rbRed.getText();
        rbMaterialTxt = rbPhrik.getText();
        accessories = new String[3];
        
        strMidi = "Midi-Chlorian Level: " + midiChlorianLvlSlider.getValue();
        lblMidi.setText(strMidi);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgColor = new javax.swing.ButtonGroup();
        btgMaterial = new javax.swing.ButtonGroup();
        cbxType = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txfName = new javax.swing.JTextField();
        txfEngrave = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        midiChlorianLvlSlider = new javax.swing.JSlider();
        rbRed = new javax.swing.JRadioButton();
        rbGreen = new javax.swing.JRadioButton();
        rbPurple = new javax.swing.JRadioButton();
        rbPhrik = new javax.swing.JRadioButton();
        rbBeskar = new javax.swing.JRadioButton();
        rbDurasteel = new javax.swing.JRadioButton();
        lblMidi = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        chkForceBooster = new javax.swing.JCheckBox();
        chkLightning = new javax.swing.JCheckBox();
        chkHealing = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        btSave = new javax.swing.JButton();
        btSummary = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaSummary = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ChavezP5: GUI by NetBeans");
        setAlwaysOnTop(true);
        setPreferredSize(new java.awt.Dimension(550, 750));

        cbxType.setBackground(new java.awt.Color(255, 255, 255));
        cbxType.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 11)); // NOI18N
        cbxType.setForeground(new java.awt.Color(0, 0, 0));
        cbxType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Standard", "Curve-Hilted", "Double-Bladed", "Short-Blade" }));
        cbxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTypeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 18)); // NOI18N
        jLabel1.setText("Custom Lightsaber Shop");

        jLabel2.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 12)); // NOI18N
        jLabel2.setText("Type of lightsaber");

        jLabel3.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 12)); // NOI18N
        jLabel3.setText("Jedi Name");

        jLabel4.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 12)); // NOI18N
        jLabel4.setText("Lightsaber Engraving");

        txfName.setBackground(new java.awt.Color(255, 255, 255));
        txfName.setForeground(new java.awt.Color(0, 0, 0));
        txfName.setToolTipText("Please enter your name");

        txfEngrave.setBackground(new java.awt.Color(255, 255, 255));
        txfEngrave.setForeground(new java.awt.Color(0, 0, 0));
        txfEngrave.setToolTipText("What do you want engraved on your lightsaber?");

        lblPrice.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 14)); // NOI18N
        lblPrice.setText("Price: (credits)");

        midiChlorianLvlSlider.setForeground(new java.awt.Color(0, 0, 0));
        midiChlorianLvlSlider.setMajorTickSpacing(2000);
        midiChlorianLvlSlider.setMaximum(20000);
        midiChlorianLvlSlider.setMinimum(10000);
        midiChlorianLvlSlider.setMinorTickSpacing(500);
        midiChlorianLvlSlider.setPaintLabels(true);
        midiChlorianLvlSlider.setPaintTicks(true);
        midiChlorianLvlSlider.setToolTipText("What is your medi-chlorian level?");
        midiChlorianLvlSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                midiChlorianLvlSliderStateChanged(evt);
            }
        });

        btgColor.add(rbRed);
        rbRed.setSelected(true);
        rbRed.setText("Red");
        rbRed.setToolTipText("Make your lightsaber red!");
        rbRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRedActionPerformed(evt);
            }
        });

        btgColor.add(rbGreen);
        rbGreen.setText("Green");
        rbGreen.setToolTipText("Make your lightsaber green!");
        rbGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbGreenActionPerformed(evt);
            }
        });

        btgColor.add(rbPurple);
        rbPurple.setText("Purple");
        rbPurple.setToolTipText("Make your lightsaber green!");
        rbPurple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPurpleActionPerformed(evt);
            }
        });

        btgMaterial.add(rbPhrik);
        rbPhrik.setSelected(true);
        rbPhrik.setText("Phrik ( lightsaber resistant )");
        rbPhrik.setToolTipText("The metal you want your lightsaber made out of");
        rbPhrik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPhrikActionPerformed(evt);
            }
        });

        btgMaterial.add(rbBeskar);
        rbBeskar.setText("Beskar ( Mandalorian iron)");
        rbBeskar.setToolTipText("The metal you want your lightsaber made out of");
        rbBeskar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBeskarActionPerformed(evt);
            }
        });

        btgMaterial.add(rbDurasteel);
        rbDurasteel.setText("Durasteel ( Durable to the elements)");
        rbDurasteel.setToolTipText("The metal you want your lightsaber made out of");
        rbDurasteel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDurasteelActionPerformed(evt);
            }
        });

        lblMidi.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 12)); // NOI18N
        lblMidi.setText("Midi-Chlorian Level");

        jLabel6.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 10)); // NOI18N
        jLabel6.setText("Lightsaber Color");

        jLabel7.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 10)); // NOI18N
        jLabel7.setText("Lightsaber Material");

        chkForceBooster.setText("Force Booster");
        chkForceBooster.setToolTipText("Adds a force booster to your lightsaber");
        chkForceBooster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkForceBoosterActionPerformed(evt);
            }
        });

        chkLightning.setText("Lightning");
        chkLightning.setToolTipText("Adds the ability to shoot lightning");
        chkLightning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLightningActionPerformed(evt);
            }
        });

        chkHealing.setText("Healing");
        chkHealing.setToolTipText("Adds healing properties to heal the wielder of the lightsaber");
        chkHealing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkHealingActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 10)); // NOI18N
        jLabel8.setText("Accessories");

        btSave.setBackground(new java.awt.Color(153, 153, 153));
        btSave.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        btSave.setForeground(new java.awt.Color(0, 0, 0));
        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btSummary.setBackground(new java.awt.Color(153, 153, 153));
        btSummary.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        btSummary.setForeground(new java.awt.Color(0, 0, 0));
        btSummary.setText("Summary");
        btSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSummaryActionPerformed(evt);
            }
        });

        txaSummary.setColumns(20);
        txaSummary.setRows(5);
        jScrollPane1.setViewportView(txaSummary);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(btSummary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSave, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbGreen)
                                            .addComponent(rbRed))
                                        .addComponent(rbPurple))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbDurasteel)
                                    .addComponent(rbPhrik)
                                    .addComponent(rbBeskar)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkForceBooster)
                                    .addComponent(chkHealing)
                                    .addComponent(chkLightning)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txfName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                    .addGap(64, 64, 64)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(txfEngrave, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(midiChlorianLvlSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(lblMidi))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxType, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfEngrave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblMidi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(midiChlorianLvlSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbRed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbGreen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbPurple))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chkForceBooster)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkLightning)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkHealing))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(rbPhrik)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbBeskar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbDurasteel)))
                .addGap(27, 27, 27)
                .addComponent(lblPrice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSave)
                    .addComponent(btSummary))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTypeActionPerformed

    private void btSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSummaryActionPerformed
        sendResults();
        txaSummary.setText(data.toString());
    }//GEN-LAST:event_btSummaryActionPerformed

    /**
     * when the the red radio button is selected the text is gathered
     * from the radio button and set into rbColorTxt
     */
    private void rbRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRedActionPerformed
        rbColorTxt = rbRed.getText();
    }//GEN-LAST:event_rbRedActionPerformed

    /**
     * when the the green radio button is selected the text is gathered
     * from the radio button and set into rbColorTxt
     */
    private void rbGreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbGreenActionPerformed
        rbColorTxt = rbGreen.getText();
    }//GEN-LAST:event_rbGreenActionPerformed

    /**
     * when the the purple radio button is selected the text is gathered
     * from the radio button and set into rbColorTxt
     */
    private void rbPurpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPurpleActionPerformed
        rbColorTxt = rbPurple.getText();
    }//GEN-LAST:event_rbPurpleActionPerformed

    private void rbPhrikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPhrikActionPerformed
        rbMaterialTxt = rbPhrik.getText();
    }//GEN-LAST:event_rbPhrikActionPerformed

    private void rbBeskarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBeskarActionPerformed
        rbMaterialTxt = rbBeskar.getText();
    }//GEN-LAST:event_rbBeskarActionPerformed

    private void rbDurasteelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDurasteelActionPerformed
        rbMaterialTxt = rbDurasteel.getText();
    }//GEN-LAST:event_rbDurasteelActionPerformed

    private void midiChlorianLvlSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_midiChlorianLvlSliderStateChanged
        strMidi = "Midi-Chlorian Level: " + midiChlorianLvlSlider.getValue();
        lblMidi.setText(strMidi);
    }//GEN-LAST:event_midiChlorianLvlSliderStateChanged

    private void chkForceBoosterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkForceBoosterActionPerformed
        if(accessories[0] == null)
        {
            accessories[0] = chkForceBooster.getText();
        }
        else
        {
            accessories[0] = null;
        }
    }//GEN-LAST:event_chkForceBoosterActionPerformed

    private void chkLightningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLightningActionPerformed
       if(accessories[1] == null)
        {
            accessories[1] = chkLightning.getText();
        }
        else
        {
            accessories[1] = null;
        }
    }//GEN-LAST:event_chkLightningActionPerformed

    private void chkHealingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkHealingActionPerformed
        if(accessories[2] == null)
        {
            accessories[2] = chkHealing.getText();
        }
        else
        {
            accessories[2] = null;
        }
    }//GEN-LAST:event_chkHealingActionPerformed
    
    /**
     * every time the user clicks the save button the method
     * calls sendResults and createFilePath.
     */
    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        sendResults();
        createFilePath();
    }//GEN-LAST:event_btSaveActionPerformed

    /**
     * sets the values from the form into the object data
     */
    private void sendResults()
    {
        data.setName(txfName.getText());
        data.setMidiChlorian(midiChlorianLvlSlider.getValue());
        data.setType((String)cbxType.getSelectedItem());
        data.setColor(rbColorTxt);
        data.setMaterial(rbMaterialTxt);
        data.setAccessories(accessories);
        data.setEngrave(txfEngrave.getText());
        
        lblPrice.setText("Price: " + data.getPrice() + " crd" );
    }
    
    /**
     * opens the save dialog and sets the file path
     * into the data object.
     */
    private void createFilePath()
    {
        JFileChooser chooser = new JFileChooser();
        int choice = chooser.showSaveDialog(this);
        if(choice == JFileChooser.APPROVE_OPTION)
        {
            File file = chooser.getSelectedFile();
            data.setFilePath(file);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSave;
    private javax.swing.JButton btSummary;
    private javax.swing.ButtonGroup btgColor;
    private javax.swing.ButtonGroup btgMaterial;
    private javax.swing.JComboBox cbxType;
    private javax.swing.JCheckBox chkForceBooster;
    private javax.swing.JCheckBox chkHealing;
    private javax.swing.JCheckBox chkLightning;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMidi;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JSlider midiChlorianLvlSlider;
    private javax.swing.JRadioButton rbBeskar;
    private javax.swing.JRadioButton rbDurasteel;
    private javax.swing.JRadioButton rbGreen;
    private javax.swing.JRadioButton rbPhrik;
    private javax.swing.JRadioButton rbPurple;
    private javax.swing.JRadioButton rbRed;
    private javax.swing.JTextArea txaSummary;
    private javax.swing.JTextField txfEngrave;
    private javax.swing.JTextField txfName;
    // End of variables declaration//GEN-END:variables
}
