package chavezP7;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;

/**
 * GUI; Mediator of the classes 
 * 
 * @author Steven Chavez <schavez256@yahoo.com>
 * File: PolygonFrame.java
 * Program 7: Polygons
 * CIS 2235
 */
public class PolygonFrame extends javax.swing.JFrame {

    private PolygonCalc calc;
    private ControlPanel controlPanel;
    private InfoPanel infoPanel;
    private DrawPanel drawPanel;
    /**
     * Creates new form PolygonFrame
     */
    public PolygonFrame() {
        initComponents();
        
        // initialze components
        calc = new PolygonCalc();
        controlPanel = new ControlPanel(this);
        infoPanel = new InfoPanel();
        drawPanel = new DrawPanel();
        
        // set initial values for form
        controlPanel.setSlider(1);
        controlPanel.setSpinner(3);
        controlPanel.setCheckBox(false);
        controlPanel.setColor(Color.RED);
        
        
        // create container and set layout
        Container canvas = getContentPane();
        canvas.setLayout(new BorderLayout());
        

        //Add the panels and button to the frame's container.
        canvas.add(drawPanel, BorderLayout.NORTH);
        canvas.add(controlPanel, BorderLayout.WEST);
        canvas.add(infoPanel, BorderLayout.EAST);
        
        calcToInfoPanel();
        
    }
    
    /**
     * sets boolean into appropriate panels to decide if a circle is to be 
     * displayed
     * 
     * @param cirlce decides if circle is displayed
     */
    public void bCircleSet(boolean cirlce)
    {
        drawPanel.setCircleSwitch(cirlce);
        infoPanel.setCircle(cirlce);
    }
    
    /**
     * Sets radius into appropriate classes
     * 
     * @param radius - radius of this polygon
     */
    public void radiusSet(int radius)
    {
        drawPanel.setRadius(radius);
        calc.setRadius(radius);
        infoPanel.setRadius(radius);
        calcToInfoPanel();
        
    }

    /**
     * Sets the number of sides into the appropriate classes
     * 
     * @param numSides - number of sides of this polygon 
     */
    public void numSideSet(int numSides)
    {
        drawPanel.setNumberOfSides(numSides);
        calc.setNumberSides(numSides);
        infoPanel.setNumberOfSides(numSides);
        calcToInfoPanel();
    }
    
    /**
     * Sets the color into the drawPanel 
     * 
     * @param color of the polygon
     */
    public void colorSet(Color color)
    {
        drawPanel.setColor(color);
    }
    
    // Transfers all of calculated info from calc to infoPanel
    private void calcToInfoPanel()
    {
        infoPanel.setPerimeter(calc.getPerimeter());
        infoPanel.setPolygonArea(calc.getPolygonArea());
        infoPanel.setCircumference(calc.getCircumference());
        infoPanel.setCircleArea(calc.getCircleArea());
        infoPanel.buildResults();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PolygonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PolygonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PolygonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PolygonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PolygonFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
