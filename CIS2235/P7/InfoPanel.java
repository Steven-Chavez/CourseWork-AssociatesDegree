package chavezP7;

import java.awt.GridLayout;
import javax.swing.BorderFactory;
import javax.swing.JTextArea;
import javax.swing.border.TitledBorder;

/**
 * Displays the area and perimeter of the polygon along with the area and 
 * circumference of the circumscribed circle.
 * 
 * @author Steven Chavez <schavez256@yahoo.com>
 * File: InfoPanel.java
 * Program 7: Polygons
 * CIS 2235
 */
public class InfoPanel extends javax.swing.JPanel {

    // contains results of polygon
    private String results;
    // contains boolean determining if circle is selected
    private boolean circle;
    // contains calculation results of the polygon
    private double perimeter, polygonArea, circumference, circleArea;
    private int radius, numSides;
    
    private JTextArea lblResults = new JTextArea();
    
    public InfoPanel() {
        initComponents();
        
        // set layout and border
        TitledBorder t1 = BorderFactory.createTitledBorder("Polygon Information");
        setBorder(t1);
	setLayout( new GridLayout( 1, 1) ); 
                
        // add componet to the panel
        add(lblResults);
        
        buildResults();
    }
    
    /**
     * Sets if circle is true or false
     * 
     * @param circle determines whether the circle results are displayed
     */
    public void setCircle(boolean circle)
    {
        this.circle = circle;
        buildResults();
    }
    
    /**
     * Sets the perimeter of the polygon
     * 
     * @param perimeter - total perimeter length in inches of this polygon  
     */
    public void setPerimeter(double perimeter)
    {
        this.perimeter = perimeter;
    }
    
    /**
     * Sets the area of the polygon
     * 
     * @param polygonArea - total area in inches of this polygon 
     */
    public void setPolygonArea(double polygonArea)
    {
        this.polygonArea = polygonArea;
    }
    
    /**
     * Sets the circumference of the circumscribed circle
     * 
     * @param circumference - total circumference of this circumscribed circle 
     */
    public void setCircumference(double circumference)
    {
        this.circumference = circumference;
    }
    
    /**
     * Sets the area of the circumscribed circle
     * 
     * @param circleArea - total area of this circumscribed circle
     */
    public void setCircleArea(double circleArea)
    {
        this.circleArea = circleArea;
    }
    
     /**
     * Sets the number of side in the polygon
     * 
     * @param numSides - number of sides in this polygon
     */
    public void setNumberOfSides(int numSides)
    {
        this.numSides = numSides;
    }
    
    /**
     * Sets the radius of the polygon
     * 
     * @param radius - radius of this polygon 
     */
    public void setRadius(int radius)
    {
        this.radius = radius;
    }
    
    /**
     * Builds a string containing the results of the polygon and sets the 
     * text of the JTextArea
     */
    public void buildResults()
    {
        results = "";
        
        results +=  "Number of Sides: " + numSides + "\n" +
                "Radius: " + radius + "\n\n" +
                "POLYGON\n" +
                "Perimeter: " + String.format("%.4f", perimeter) + "\n" +
                "Area: " + String.format("%.4f", polygonArea) + "\n\n";
        
        if(circle)
        {
             results += "CIRCLE\n" +
                        "Circumference: " + String.format("%.4f", circumference) + "\n"+
                        "Area: "  + String.format("%.4f", circleArea);
        }
        
       lblResults.setText(results);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
