package user;

import data.DbManager;
import data.HandTool;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

/**
 * contains the components necessary to gather the information so the dbManager
 * can insert a new row of data into the access database
 * 
 * @author Steven Chavez <schavez256@yahoo.com>
 * File: InsertPanel.java
 * ChavezP8: Database Manipulation
 * CIS 2235
 */
public class InsertPanel extends javax.swing.JPanel {

    private HandTool tool;
    private DbManager db = new DbManager();
    private HandToolFrame frame;
    private JLabel  insert_lblBrand, insert_lblKind, insert_lblSize, 
                    insert_lblCost, insert_lblDate, insert_lblWarranty;
    private JTextField  insert_txtFBrand, insert_txtFKind, insert_txtFSize,
                        insert_txtFCost, insert_txtFDate;
    private JRadioButton insert_rbWarranty;
    private JButton insert_btInsert;
    
    public InsertPanel(HandToolFrame frame)
    {
        this.frame = frame;
        initComponents();
        
        // Initialize JLabels
        insert_lblBrand = new JLabel("Brand");
        insert_lblKind = new JLabel("Kind");
        insert_lblSize = new JLabel("Size");
        insert_lblCost = new JLabel("Cost");
        insert_lblDate = new JLabel("Date (Year-Month-Day)");
        insert_lblWarranty = new JLabel("Life Time Warranty?");
        
        // Initialize JTextFields
        insert_txtFBrand = new JTextField();
        insert_txtFKind = new JTextField();
        insert_txtFSize = new JTextField();
        insert_txtFCost = new JTextField();
        insert_txtFDate = new JTextField();
        
        // Initialize JRadioButton
        insert_rbWarranty = new JRadioButton();
        
        // Initialize JButton
        insert_btInsert = new JButton("Insert");
        
        setLayout(new GridLayout(7,2,10,10));
        
        // add components to layout
        add(insert_lblBrand);
        add(insert_txtFBrand);
        
        add(insert_lblKind);
        add(insert_txtFKind);
        
        add(insert_lblSize);
        add(insert_txtFSize);
        
        add(insert_lblCost);
        add(insert_txtFCost);
        
        add(insert_lblDate);
        add(insert_txtFDate);
        
        add(insert_lblWarranty);
        add(insert_rbWarranty);
        
        add(insert_btInsert);
        
        // Create and register anonymous class listeners
        insert_btInsert.addActionListener(new BtInsertActionListener());
    }
    
    // Gathers information from components into tool and sends it to DbManager
    private void insertNewData()
    {
        tool = new HandTool();
        tool.setBrand(insert_txtFBrand.getText());
        tool.setKind(insert_txtFKind.getText());
        tool.setSize(insert_txtFSize.getText());
        tool.setCost(Double.parseDouble(insert_txtFCost.getText()));
        tool.setPurchaseDate(insert_txtFDate.getText());
        tool.setWarranty(insert_rbWarranty.isSelected());
        
        try 
        {
            db.insert(tool);
            frame.updateList();
        } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage(), 
                                "SQL Error",JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    //Prepares data to be inserted into the database when button is clicked
    private class BtInsertActionListener implements ActionListener 
    {
        @Override
        public void actionPerformed(ActionEvent e) 
        {
            insertNewData();
        }
    }
}
